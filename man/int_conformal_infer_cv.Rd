% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conformal_infer_cv.R
\name{int_conformal_infer_cv}
\alias{int_conformal_infer_cv}
\alias{int_conformal_infer_cv.default}
\alias{int_conformal_infer_cv.resample_results}
\alias{int_conformal_infer_cv.tune_results}
\title{Prediction intervals via conformal inference CV+}
\usage{
int_conformal_infer_cv(object, ...)

\method{int_conformal_infer_cv}{default}(object, ...)

\method{int_conformal_infer_cv}{resample_results}(object, ...)

\method{int_conformal_infer_cv}{tune_results}(object, parameters, ...)
}
\arguments{
\item{object}{An object from a tidymodels resampling or tuning function such
as \code{\link[tune:fit_resamples]{tune::fit_resamples()}}, \code{\link[tune:tune_grid]{tune::tune_grid()}}, or similar. .}

\item{...}{Not currently used.}

\item{parameters}{An tibble of tuning parameter values that can be
used to filter the predicted values before processing. This tibble should
select a single set of hyperparameter values from the tuning results. This is
only required when a tuning object is passed to \code{object}.}
}
\value{
An object of class \code{"int_conformal_infer_cv"} containing the information
to create intervals. The \code{predict()} method is used to produce the intervals.
}
\description{
Nonparametric prediction intervals can be computed for fitted workflow
objects using the CV+ conformal inference method described by Barber \emph{at al}
(2018).
}
\details{
This function implements the CV+ method found in Section 3 of Barber \emph{at al}
(2018). It uses the resampled model fits and their associated holdout
residuals to make prediction intervals for regression models.

This function prepares the objects for the computations. The \code{\link[=predict]{predict()}}
method computes the intervals for new data.
}
\references{
Rina Foygel Barber, Emmanuel J. Cand√®s, Aaditya Ramdas, Ryan J. Tibshirani
"Predictive inference with the jackknife+," \emph{The Annals of Statistics},
49(1), 486-507, 2021
}
\seealso{
\code{\link[=predict.int_conformal_infer_cv]{predict.int_conformal_infer_cv()}}
}
